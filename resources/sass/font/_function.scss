@function breakpoint($breakpoint-name) {
    $breakpoint-value : map-get($breakpoints, $breakpoint-name);
    @if $breakpoint-value {
      @return $breakpoint-value;
    }
}

@function text-breakpoints-for($text-size) {
    $text-breakpoints : map-get($style, $text-size);
    @if $text-breakpoints {
      @return $text-breakpoints;
    }
}

@function text-properties-for($text-size, $breakpoint-name) {
    $text-breakpoints : text-breakpoints-for($text-size);
    $text-properties  : map-get($text-breakpoints, $breakpoint-name);
    @if $text-properties {
      @return $text-properties;
    }
}

@mixin respond-above($breakpoint-name) {
    $breakpoint-value : breakpoint($breakpoint-name);
    @if $breakpoint-value {
      @media screen and (min-width: $breakpoint-value) {
        @content;
      }
    }
}

@mixin text-size($text-size, $breakpoint-name : 'xs') {
    $text-size-properties : text-properties-for($text-size, $breakpoint-name);
    @if $text-size-properties {
      font-size: map-get($text-size-properties, 'font-size') !important;
    //   line-height: map-get($text-size-properties, 'line-height');
    }
}

@mixin responsive-text-size($text-size, $default-breakpoint : 'xs') {
    @include text-size($text-size, $default-breakpoint);
    $text-breakpoints-map: text-breakpoints-for($text-size);
    $text-breakpoints-keys: map-keys($text-breakpoints-map);
    @each $breakpoint-name in $text-breakpoints-keys {
      @if $breakpoint-name != $default-breakpoint {
        @include respond-above($breakpoint-name) {
          @include text-size($text-size, $breakpoint-name);
        }
      }
    }
}
